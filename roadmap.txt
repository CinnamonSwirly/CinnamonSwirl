Phase 0
    Planning initial features
    Making design decisions
    Implementing practices learned in courses
Phase 1 - WE ARE HERE
    Basic functionality
    Database implementation
    Documentation Tools and/or generation methods
Phase 2
    Methods to stand up environment on demand (Dockerfile, docker compose, etc)
Phase 3
    Adding advanced features
Phase 4
    Cleanup for public release
Phase 5
    Release
    Ongoing maintenance

Phase 1 Notes:
Check out configparser instead of using dotenv
    Yay! It worked! There is a 'fallback' method built-in to configparser, however, I wanted a cute dictionary
    to visualize the default config instead of having it line-by-line.

Configure logging
    I ended up hard-coding the location of the log file and the name of it. I originally played around with letting
    these be changed in the config file, but I found it just wasn't worth it. Given that I was only doing this to learn
    using the current libraries and the config will likely be placed in a DB anyway, it didn't make sense to
    over-engineer it.

Testing
    Never done it before - automated, I mean. - so I need to find examples and try them out.

Future features:
* Timezone support
    Probably to be done via website
* Remove and edit reminders
    Good idea for over the website! Will still implement a "Clear all" function.
* Snooze function
    Make the bot shut up for a while, ignoring reminders.